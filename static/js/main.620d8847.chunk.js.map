{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","pages","isFirstPage","isLastPage","handlerChangePage","event","target","id","className","classNames","disabled","href","onClick","map","page","active","items","App","useState","setPerPage","setPage","start","end","min","length","onChange","value","Number","htmlFor","newPage","slice","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAQd,EAAW,EAAGW,GACtBI,EAA8B,IAAhBN,EACdO,EAAaP,IAAgBE,EAE7BM,EAAoB,SAACC,GACD,SAApBA,EAAMC,OAAOC,IAAkBL,GACjCL,EAAaD,EAAc,GAGL,SAApBS,EAAMC,OAAOC,IAAkBJ,GACjCN,EAAaD,EAAc,IAI/B,OACE,qBAAIY,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CACEC,SAAUR,IAHd,SAOE,mBACEK,GAAG,OACH,UAAQ,WACRC,UAAU,YACVG,KAAI,WAAMf,GACV,gBAAeM,EACfU,QAASR,EANX,oBAWDH,EAAMY,KAAI,SAACC,GAAD,OACT,oBAEEN,UAAWC,IACT,YACA,CACEM,OAAQD,IAASlB,IALvB,SASE,mBACE,UAAQ,WACRY,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMf,EAAaiB,IAJ9B,SAMGA,KAdEA,MAkBT,oBAAIN,UAAWC,IACb,YACA,CACEC,SAAUP,IAHd,SAOE,mBACEI,GAAG,OACH,UAAQ,WACRC,UAAU,YACVG,KAAI,WAAMf,GACV,gBAAeO,EACfS,QAASR,EANX,wBCzEFY,EAAQ7B,EAAW,EAAG,IACzB0B,KAAI,SAAAtB,GAAC,qBAAYA,MAEP0B,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOvB,EAAP,KAAgBwB,EAAhB,KACA,EAAwBD,mBAAS,GAAjC,mBAAOJ,EAAP,KAAaM,EAAb,KACMC,GAASP,EAAO,GAAKnB,EAAU,EAC/B2B,EAAMvB,KAAKwB,IAAIT,EAAOnB,EAASqB,EAAMQ,QAa3C,OACE,sBAAKhB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWM,EADX,mBAC0BO,EAD1B,cACqCC,EADrC,eAC+CN,EAAMQ,OADrD,OAIA,sBAAKhB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRD,GAAG,kBACHC,UAAU,eACViB,SAzBW,SAACpB,GACpB,IAAQqB,EAAUrB,EAAMC,OAAhBoB,MAERP,EAAWQ,OAAOD,IAClBN,EAAQ,IAsBAM,MAAO/B,EALT,UAOE,wBAAQ+B,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOE,QAAQ,kBAAkBpB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEd,MAAOsB,EAAMQ,OACb7B,QAASA,EACTC,YAAakB,EACbjB,aArCkB,SAACgC,GACvBT,EAAQS,MAuCN,6BACGb,EAAMc,MAAMT,EAAQ,EAAGC,GAAKT,KAAI,SAAAkB,GAAI,OACnC,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YC9DjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.620d8847.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n  const pages = getNumbers(1, totalPages);\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === totalPages;\n\n  const handlerChangePage = (event: any) => {\n    if (event.target.id === 'prev' && !isFirstPage) {\n      onPageChange(currentPage - 1);\n    }\n\n    if (event.target.id === 'next' && !isLastPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item',\n        {\n          disabled: isFirstPage,\n        },\n      )}\n      >\n        <a\n          id=\"prev\"\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href={`#${currentPage}`}\n          aria-disabled={isFirstPage}\n          onClick={handlerChangePage}\n        >\n          «\n        </a>\n      </li>\n      {pages.map((page) => (\n        <li\n          key={page}\n          className={classNames(\n            'page-item',\n            {\n              active: page === currentPage,\n            },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li className={classNames(\n        'page-item',\n        {\n          disabled: isLastPage,\n        },\n      )}\n      >\n        <a\n          id=\"next\"\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href={`#${currentPage}`}\n          aria-disabled={isLastPage}\n          onClick={handlerChangePage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [page, setPage] = useState(1);\n  const start = (page - 1) * perPage + 1;\n  const end = Math.min(page * perPage, items.length);\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setPerPage(Number(value));\n    setPage(1);\n  };\n\n  const handlePageClick = (newPage: number) => {\n    setPage(newPage);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${start} - ${end} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handleChange}\n            value={perPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={page}\n        onPageChange={handlePageClick}\n      />\n\n      <ul>\n        {items.slice(start - 1, end).map(item => (\n          <li\n            key={item}\n            data-cy=\"item\"\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}